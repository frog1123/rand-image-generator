use image::{RgbImage};

use crate::utils;

pub fn draw(mut img: RgbImage, variant: &str, color: [u8; 3], has_hat: bool) -> RgbImage {

  // create outline
  let outline_points: [(u32, u32); 59] = [
      (25, 29), (25, 28), (25, 27), (25, 26), (25, 25), (25, 24), (25, 23), (25, 22), 
      (25, 21), (25, 20), (25, 19), (25, 18), (25, 17), (25, 16), (25, 15), (25, 14),
      (25, 13), (25, 12), (25, 11), (25, 10), (24, 9), (23, 8), (22, 8), (21, 8), 
      (20, 8), (19, 8), (18, 8), (17, 8), (16, 8), (15, 8), (14, 8), (13, 8), (12, 9),
      (11, 10), (11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16), (11, 17), 
      (11, 18), (11, 19), (11, 20), (11, 21), (11, 22), (12, 23), (13, 24), (14, 24), 
      (15, 24), (16, 24), (17, 24), (18, 24), (19, 24), (20, 25), (20, 26), (20, 27),
      (20, 28), (20, 29)
    ];

  let inside_points: [(u32, u32); 217] = [
    (13, 9), (14, 9), (15, 9), (16, 9), (17, 9), (18, 9), (19, 9), (20, 9), (21, 9), (22, 9), (23, 9),
    (12, 10), (13, 10), (14, 10), (15, 10), (16, 10), (17, 10), (18, 10), (19, 10), (20, 10), (21, 10), (22, 10), (23, 10), (24, 10),
    (12, 11), (13, 11), (14, 11), (15, 11), (16, 11), (17, 11), (18, 11), (19, 11), (20, 11), (21, 11), (22, 11), (23, 11), (24, 11),
    (12, 12), (13, 12), (14, 12), (15, 12), (16, 12), (17, 12), (18, 12), (19, 12), (20, 12), (21, 12), (22, 12), (23, 12), (24, 12),
    (12, 13), (13, 13), (14, 13), (15, 13), (16, 13), (17, 13), (18, 13), (19, 13), (20, 13), (21, 13), (22, 13), (23, 13), (24, 13),
    (12, 14), (13, 14), (14, 14), (15, 14), (16, 14), (17, 14), (18, 14), (19, 14), (20, 14), (21, 14), (22, 14), (23, 14), (24, 14),
    (12, 15), (13, 15), (14, 15), (15, 15), (16, 15), (17, 15), (18, 15), (19, 15), (20, 15), (21, 15), (22, 15), (23, 15), (24, 15),
    (12, 16), (13, 16), (14, 16), (15, 16), (16, 16), (17, 16), (18, 16), (19, 16), (20, 16), (21, 16), (22, 16), (23, 16), (24, 16),
    (12, 17), (13, 17), (14, 17), (15, 17), (16, 17), (17, 17), (18, 17), (19, 17), (20, 17), (21, 17), (22, 17), (23, 17), (24, 17),
    (12, 18), (13, 18), (14, 18), (15, 18), (16, 18), (17, 18), (18, 18), (19, 18), (20, 18), (21, 18), (22, 18), (23, 18), (24, 18),
    (12, 19), (13, 19), (14, 19), (15, 19), (16, 19), (17, 19), (18, 19), (19, 19), (20, 19), (21, 19), (22, 19), (23, 19), (24, 19),
    (12, 20), (13, 20), (14, 20), (15, 20), (16, 20), (17, 20), (18, 20), (19, 20), (20, 20), (21, 20), (22, 20), (23, 20), (24, 20),
    (12, 21), (13, 21), (14, 21), (15, 21), (16, 21), (17, 21), (18, 21), (19, 21), (20, 21), (21, 21), (22, 21), (23, 21), (24, 21),
    (12, 22), (13, 22), (14, 22), (15, 22), (16, 22), (17, 22), (18, 22), (19, 22), (20, 22), (21, 22), (22, 22), (23, 22), (24, 22),
    (13, 23), (14, 23), (15, 23), (16, 23), (17, 23), (18, 23), (19, 23), (20, 23), (21, 23), (22, 23), (23, 23), (24, 23),
    (20, 24), (21, 24), (22, 24), (23, 24), (24, 24),
    (21, 25), (22, 25), (23, 25), (24, 25),
    (21, 26), (22, 26), (23, 26), (24, 26),
    (21, 27), (22, 27), (23, 27), (24, 27),
    (21, 28), (22, 28), (23, 28), (24, 28),
    (21, 29), (22, 29), (23, 29), (24, 29)
  ];

  let zombie_points_1: [(u32, u32); 4] = [(24, 26), (22, 28), (23, 28), (24, 28)];
  let zombie_points_2: [(u32, u32); 5] = [(23, 27), (24, 27), (22, 29), (23, 29), (24, 29)];
  
  let monkey_points: [(u32, u32); 102] = [
    (13, 12), (14, 12), (15, 12), (16, 12), (17, 12), (18, 12), (19, 12),
    (12, 13), (13, 13), (14, 13), (15, 13), (16, 13), (17, 13), (18, 13), (19, 13), (20, 13),
    (12, 14), (13, 14), (14, 14), (15, 14), (16, 14), (17, 14), (18, 14), (19, 14), (20, 14),
    (12, 15), (13, 15), (14, 15), (15, 15), (16, 15), (17, 15), (18, 15), (19, 15), (20, 15),
    (12, 16), (13, 16), (14, 16), (15, 16), (16, 16), (17, 16), (18, 16), (19, 16), (20, 16),
    (12, 17), (13, 17), (14, 17), (15, 17), (16, 17), (17, 17), (18, 17), (19, 17), (20, 17),
    (12, 18), (13, 18), (14, 18), (15, 18), (16, 18), (17, 18), (18, 18), (19, 18), (20, 18),
    (13, 19), (14, 19), (15, 19), (16, 19), (17, 19), (18, 19), (19, 19),
    (12, 20), (13, 20), (14, 20), (15, 20), (16, 20), (17, 20), (18, 20), (19, 20), (20, 20),
    (12, 21), (13, 21), (14, 21), (15, 21), (16, 21), (17, 21), (18, 21), (19, 21), (20, 21),
    (12, 22), (13, 22), (14, 22), (15, 22), (16, 22), (17, 22), (18, 22), (19, 22), (20, 22),
    (13, 23), (14, 23), (15, 23), (16, 23), (17, 23), (18, 23), (19, 23),
  ];

  let demon_points_1: [(u32, u32); 14] = [
    (12, 7), (12, 6), (12, 5), (13, 4), (14, 5), (14, 6), (15, 7),
    (24, 7), (24, 6), (24, 5), (23, 4), (22, 5), (22, 6), (21, 7)
  ];
  let demon_points_2: [(u32, u32); 8] = [
    (13, 5), (13, 6), (13, 7), (14, 7),
    (23, 5), (23, 6), (23, 7), (22, 7)
  ];

  img = utils::create_pixel::create(img, Box::new(outline_points), [0, 0, 0]);
  img = utils::create_pixel::create(img, Box::new(inside_points), color);

  if variant == "zombie" {
    img = utils::create_pixel::create(img, Box::new(zombie_points_1), [107, 22, 28]);
    img = utils::create_pixel::create(img, Box::new(zombie_points_2), [211, 211, 211]);
  }
  if variant == "monkey" {
    img = utils::create_pixel::create(img, Box::new(monkey_points), [104, 85, 61]);
  }
  if variant == "demon" && !has_hat {
    img = utils::create_pixel::create(img, Box::new(demon_points_1), [0, 0, 0]);
    img = utils::create_pixel::create(img, Box::new(demon_points_2), [211, 211, 211]);
  }

  return img;
}